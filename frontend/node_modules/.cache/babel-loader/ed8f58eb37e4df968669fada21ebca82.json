{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Ambuj\\\\Desktop\\\\Coding\\\\web-projects\\\\tourela\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Ambuj\\\\Desktop\\\\Coding\\\\web-projects\\\\tourela\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Ambuj\\\\Desktop\\\\Coding\\\\web-projects\\\\tourela\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ambuj\\\\Desktop\\\\Coding\\\\web-projects\\\\tourela\\\\frontend\\\\src\\\\Login.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Login.css';\n\nfunction loginUser(_x) {\n  return _loginUser.apply(this, arguments);\n}\n\nfunction _loginUser() {\n  _loginUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(credentials) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", fetch('http://localhost:8080/login', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(credentials)\n            }).then(function (data) {\n              return data.json();\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loginUser.apply(this, arguments);\n}\n\nexport default function Login(_ref) {\n  var setToken = _ref.setToken;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var token;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return loginUser({\n                username: username,\n                password: password\n              });\n\n            case 3:\n              token = _context.sent;\n              setToken(token);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"loginHeading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    class: \"formInput\",\n    type: \"text\",\n    placeholder: \"username\",\n    onChange: function onChange(e) {\n      return setUserName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    class: \"formInput\",\n    type: \"password\",\n    placeholder: \"password\",\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"submitButtonWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"submitBtn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["C:/Users/Ambuj/Desktop/Coding/web-projects/tourela/frontend/src/Login.js"],"names":["React","useState","PropTypes","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","data","json","Login","setToken","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","token","target","value","propTypes","func","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;;SAGeC,S;;;;;wEAAf,kBAAyBC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,8CACSC,KAAK,CAAC,6BAAD,EAAgC;AAC1CC,cAAAA,MAAM,EAAE,MADkC;AAE1CC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFiC;AAK1CC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf;AALoC,aAAhC,CAAL,CAOJO,IAPI,CAOC,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,aAPL,CADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAWA,eAAe,SAASC,KAAT,OAA2B;AAAA,MAAXC,QAAW,QAAXA,QAAW;;AAAA,kBACRd,QAAQ,EADA;AAAA;AAAA,MACjCe,QADiC;AAAA,MACvBC,WADuB;;AAAA,mBAERhB,QAAQ,EAFA;AAAA;AAAA,MAEjCiB,QAFiC;AAAA,MAEvBC,WAFuB;;AAIxC,MAAMC,YAAY;AAAA,yEAAG,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,CAAC,CAACC,cAAF;AADmB;AAAA,qBAECnB,SAAS,CAAC;AAC5Ba,gBAAAA,QAAQ,EAARA,QAD4B;AAE5BE,gBAAAA,QAAQ,EAARA;AAF4B,eAAD,CAFV;;AAAA;AAEbK,cAAAA,KAFa;AAMnBR,cAAAA,QAAQ,CAACQ,KAAD,CAAR;;AANmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZH,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAM,IAAA,QAAQ,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,IAAA,KAAK,EAAC,WAAb;AAAyB,IAAA,IAAI,EAAC,MAA9B;AAAqC,IAAA,WAAW,EAAC,UAAjD;AAA4D,IAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,aAAIJ,WAAW,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAAf;AAAA,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,IAAA,KAAK,EAAC,WAAb;AAAyB,IAAA,IAAI,EAAC,UAA9B;AAAyC,IAAA,WAAW,EAAC,UAArD;AAAgE,IAAA,QAAQ,EAAE,kBAAAJ,CAAC;AAAA,aAAIF,WAAW,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV,CAAf;AAAA,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,eASE;AAAK,IAAA,EAAE,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,EAAE,EAAC,WAAX;AAAuB,IAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CATF,CAFF,CADF;AAkBD;AAEDX,KAAK,CAACY,SAAN,GAAkB;AAChBX,EAAAA,QAAQ,EAAEb,SAAS,CAACyB,IAAV,CAAeC;AADT,CAAlB","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Login.css';\r\n\r\n\r\nasync function loginUser(credentials) {\r\n  return fetch('http://localhost:8080/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(credentials)\r\n  })\r\n    .then(data => data.json())\r\n }\r\n\r\nexport default function Login({setToken}) {\r\n  const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const token = await loginUser({\r\n      username,\r\n      password\r\n    });\r\n    setToken(token);\r\n  }\r\n  return(\r\n    <div className=\"login-wrapper\">\r\n      <div id=\"loginHeading\">Login</div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <p>Username</p>\r\n          <input class=\"formInput\" type=\"text\" placeholder='username' onChange={e => setUserName(e.target.value)}/>\r\n        </label>\r\n        <label>\r\n          <p>Password</p>\r\n          <input class=\"formInput\" type=\"password\" placeholder='password' onChange={e => setPassword(e.target.value)}/>\r\n        </label>\r\n        <div id='submitButtonWrapper'>\r\n          <button id=\"submitBtn\" type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  setToken: PropTypes.func.isRequired\r\n};"]},"metadata":{},"sourceType":"module"}